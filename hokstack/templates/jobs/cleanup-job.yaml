{{- if .Values.cleanup.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-job
  annotations:
    "helm.sh/hook": "pre-delete"
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.teamname }}-hok-admin
      containers:
      - name: cleanup
        image: {{ .Values.ambariserver.image.repository }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["bash","-c", "/scripts/cleanup.sh"]
        env:
        - name: AMBARISERVER
          value: "ambariserver-0"
        - name: DATANODE
          value: "datanode"
        - name: PODIP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: cleanup-sh
          mountPath: /scripts/cleanup.sh
          subPath: cleanup.sh
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      volumes:
      - name: cleanup-sh
        configMap:
          name: cleanup-sh
          defaultMode: 0777
  backoffLimit: 5
  completions: 1
  parallelism: 1
{{- end }}